name: Workflow for CD deployment on Vercel with GitHub Actions

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  NODE_VERSION: 20.x # Ajout recommandé

jobs:
  Deploy:
    name: Deploy after a release or a manual trigger to Vercel
    runs-on: ubuntu-latest
    timeout-minutes: 30 # Nouveau: évite les jobs bloqués

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Configuration Node/Yarn améliorée
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "yarn"

      - name: Enable Corepack
        run: corepack enable

      - name: Install correct Yarn version
        run: |
          corepack prepare yarn@4.7.0 --activate
          yarn --version

      - name: Install dependencies
        run: yarn install --immutable

      # Solution clé: Modification de l'installation Vercel CLI
      - name: Setup Vercel CLI
        run: |
          yarn add vercel@latest --dev # Installation locale
          echo "$(yarn bin)" >> $GITHUB_PATH # Ajout au PATH

      - name: Verify Environment
        run: |
          echo "Node: $(node --version)"
          echo "Yarn: $(yarn --version)"
          echo "Vercel: $(vercel --version)"
          which vercel || exit 1

      - name: Pull Vercel environment
        run: vercel pull --yes --environment=production --token=${{ env.VERCEL_TOKEN }}

      - name: Build Project
        run: vercel build --prod --token=${{ env.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ env.VERCEL_TOKEN }}
